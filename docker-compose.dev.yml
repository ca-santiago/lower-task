version: "3"

services:
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile.dev
    image: auth-service
    container_name: auth-service
    environment:
      - NODE_ENV=DEV
      - DEV_MONGO_PORT=27017
      - DEV_MONGO_HOST=db
      - DEV_MONGO_DBNAME=auth-app
      - MQ_URL=amqp://queue
      - MQ_QUEUE=auth-service-queue
      - MQ_EXCHANGE=auth-service-exchange
      - MQ_SERVICE_NAME=auth-service
      - PORT=4040
    ports:
      - "4040"
    depends_on:
      - mongo-db
      - message-queue
    volumes:
      - "./auth-service/src:/app/src"
  todo-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    image: lowertask-dev/backend
    ports:
     - "3001"
    # network_mode: host 
    depends_on:
      - mongo-db
      - auth-service
      - message-queue
    links:
      - message-queue
    environment:
      - PORT=3001
      - NODE_ENV=DEV
      - DEV_MONGO_PORT=27017
      - DEV_MONGO_HOST=db
      - DEV_MONGO_DBNAME=taskapp
      - DEV_MONGO_USER=
      - DEV_MONGO_PASSWORD=
      - FILE_STORAGE_NAME=lower-task-image-bucket 
      - FILE_STORAGE_ENDPOINT=http://192.168.43.1:9000
      - FILE_STORAGE_ACCESS_KEY=minioadmin
      - FILE_STORAGE_SECRET_ACCESS=minioadmin
      - MQ_URL=amqp://queue
      - MQ_QUEUE=todo-app-queue
      - MQ_EXCHANGE=todo-service-exchange
      - MQ_SERVICE_NAME=todo-service
      - AUTH_SERVICE_URL=http://auth-service:4040
    volumes:
      - "./backend/src:/app/src"
   #client:
    # build:
    #   context: ./client
    #dockerfile: Dockerfile.dev
    #image: lowertask-dev/client
    #ports:
      #- 3001:3000
    #environment:
      #- REACT_APP_TASK_API_KEY=asd
      #- REACT_APP_AUTH_API_KEY=asd
      #- REACT_APP_NO_SECRET=somecode
    #volumes:
      #- "./client/src:/app/src"
  nginx:
    image: nginx
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
      - todo-service
      - auth-service
      # - client
    ports:
      - "8181:80"
  mongo-db:
    container_name: db
    image: mongo
    volumes:
      - "./db:/data/db"
    ports:
      - "27017:27017"
  message-queue:
    container_name: queue
    image: rabbitmq:3-management
    ports:
      - 15672:15672
